{"ast":null,"code":"import _classCallCheck from\"/Users/abdussamad/Documents/Projects/Mosque-Screens/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abdussamad/Documents/Projects/Mosque-Screens/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import moment from'moment';import config from'../../config.json';import csvtojson from'csvtojson';import request from'request';var HadithData=/*#__PURE__*/function(){function HadithData(){_classCallCheck(this,HadithData);this.updateData();}_createClass(HadithData,[{key:\"getHadithSpreadsheetUrl\",value:function getHadithSpreadsheetUrl(){return process.env.REACT_APP_HADITH_DATA_SPREADSHEET_URL||config.googleSheets.hadithData;}},{key:\"getHadithFromGoogleSheets\",value:function getHadithFromGoogleSheets(){var _this=this;var hadithSpreadsheetUrl=this.getHadithSpreadsheetUrl();if(!hadithSpreadsheetUrl){alert('Hadith CSV not set');}return csvtojson().fromStream(request.get(\"\".concat(hadithSpreadsheetUrl,\"&_cacheBust=\").concat(Math.random()))).then(function(json){_this.storeHadithData(json);return json;});}},{key:\"getAllHadithData\",value:function getAllHadithData(){var _hadithData=window.localStorage.getItem('hadithData');return _hadithData?JSON.parse(_hadithData):null;}},{key:\"getLastUpdatedTime\",value:function getLastUpdatedTime(){return JSON.parse(window.localStorage.getItem('hadithData_lastUpdated'));}},{key:\"getLastChangedTime\",value:function getLastChangedTime(){return JSON.parse(window.localStorage.getItem('hadithData_lastChangedHadith'));}},{key:\"getHadithCurrentIndex\",value:function getHadithCurrentIndex(){return JSON.parse(window.localStorage.getItem('hadithData_currentIndex'));}},{key:\"getCurrentDayHadith\",value:function getCurrentDayHadith(){var lastHadithChanged=this.getLastChangedTime();if(!lastHadithChanged){// If last change wasn't set then set it and set current index to 0, as this is the first (re)run.\nlastHadithChanged=moment().unix();var _currentHadithIndex=0;this._updateHadithMetadata(lastHadithChanged,_currentHadithIndex);}var daysPassed=(moment().unix()-lastHadithChanged)/60/60/24;var oneDayHasPassed=daysPassed>1?true:false;var currentHadithIndex=this.getHadithCurrentIndex();var hadith=this.getAllHadithData();var currentHadith={hadith:\"If you can see this, then the hadith haven't been loaded properly. Try refreshing.\",source:'Or check if the hadith source URL is correct in your ENV variables or config file.'};if(oneDayHasPassed){currentHadithIndex+1>=Object.keys(hadith).length?currentHadithIndex=0:++currentHadithIndex;this._updateHadithMetadata(moment().unix(),currentHadithIndex);}if(hadith){currentHadith=hadith[currentHadithIndex];}return currentHadith;}},{key:\"_updateHadithMetadata\",value:function _updateHadithMetadata(lastChanged,currentIndex){if(lastChanged&&currentIndex>=0){window.localStorage.setItem('hadithData_lastChangedHadith',lastChanged);window.localStorage.setItem('hadithData_currentIndex',currentIndex);}}},{key:\"storeHadithData\",value:function storeHadithData(){var hadithData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];window.localStorage.setItem('hadithData',JSON.stringify(hadithData));window.localStorage.setItem('hadithData_lastUpdated',moment().unix());}},{key:\"updateData\",value:function updateData(){var lastHadithUpdateDiff=moment().unix()-this.getLastUpdatedTime();var alreadyHasHadithData=this.getAllHadithData()?true:false;if(lastHadithUpdateDiff>config.googleSheets.refreshRate*60||!alreadyHasHadithData){this.getHadithFromGoogleSheets();console.info('Updating Hadith Data....');}}}]);return HadithData;}();export{HadithData as default};","map":{"version":3,"sources":["/Users/abdussamad/Documents/Projects/Mosque-Screens/src/_components/hadith-data/hadith-data.js"],"names":["moment","config","csvtojson","request","HadithData","updateData","process","env","REACT_APP_HADITH_DATA_SPREADSHEET_URL","googleSheets","hadithData","hadithSpreadsheetUrl","getHadithSpreadsheetUrl","alert","fromStream","get","Math","random","then","json","storeHadithData","_hadithData","window","localStorage","getItem","JSON","parse","lastHadithChanged","getLastChangedTime","unix","currentHadithIndex","_updateHadithMetadata","daysPassed","oneDayHasPassed","getHadithCurrentIndex","hadith","getAllHadithData","currentHadith","source","Object","keys","length","lastChanged","currentIndex","setItem","stringify","lastHadithUpdateDiff","getLastUpdatedTime","alreadyHasHadithData","refreshRate","getHadithFromGoogleSheets","console","info"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport config from '../../config.json';\nimport csvtojson from 'csvtojson';\nimport request from 'request';\n\nexport default class HadithData {\n  constructor() {\n    this.updateData();\n  }\n\n  getHadithSpreadsheetUrl() {\n    return (\n      process.env.REACT_APP_HADITH_DATA_SPREADSHEET_URL ||\n      config.googleSheets.hadithData\n    );\n  }\n\n  getHadithFromGoogleSheets() {\n    let hadithSpreadsheetUrl = this.getHadithSpreadsheetUrl();\n\n    if (!hadithSpreadsheetUrl) {\n      alert('Hadith CSV not set');\n    }\n\n    return csvtojson()\n      .fromStream(\n        request.get(`${hadithSpreadsheetUrl}&_cacheBust=${Math.random()}`)\n      )\n      .then(json => {\n        this.storeHadithData(json);\n        return json;\n      });\n  }\n\n  getAllHadithData() {\n    let _hadithData = window.localStorage.getItem('hadithData');\n    return _hadithData ? JSON.parse(_hadithData) : null;\n  }\n\n  getLastUpdatedTime() {\n    return JSON.parse(window.localStorage.getItem('hadithData_lastUpdated'));\n  }\n\n  getLastChangedTime() {\n    return JSON.parse(\n      window.localStorage.getItem('hadithData_lastChangedHadith')\n    );\n  }\n\n  getHadithCurrentIndex() {\n    return JSON.parse(window.localStorage.getItem('hadithData_currentIndex'));\n  }\n\n  getCurrentDayHadith() {\n    let lastHadithChanged = this.getLastChangedTime();\n    if (!lastHadithChanged) {\n      // If last change wasn't set then set it and set current index to 0, as this is the first (re)run.\n      lastHadithChanged = moment().unix();\n      let currentHadithIndex = 0;\n      this._updateHadithMetadata(lastHadithChanged, currentHadithIndex);\n    }\n\n    let daysPassed = (moment().unix() - lastHadithChanged) / 60 / 60 / 24;\n    let oneDayHasPassed = daysPassed > 1 ? true : false;\n\n    let currentHadithIndex = this.getHadithCurrentIndex();\n    let hadith = this.getAllHadithData();\n\n    let currentHadith = {\n      hadith:\n        \"If you can see this, then the hadith haven't been loaded properly. Try refreshing.\",\n      source:\n        'Or check if the hadith source URL is correct in your ENV variables or config file.'\n    };\n\n    if (oneDayHasPassed) {\n      currentHadithIndex + 1 >= Object.keys(hadith).length\n        ? (currentHadithIndex = 0)\n        : ++currentHadithIndex;\n\n      this._updateHadithMetadata(moment().unix(), currentHadithIndex);\n    }\n\n    if (hadith) {\n      currentHadith = hadith[currentHadithIndex];\n    }\n\n    return currentHadith;\n  }\n\n  _updateHadithMetadata(lastChanged, currentIndex) {\n    if (lastChanged && currentIndex >= 0) {\n      window.localStorage.setItem('hadithData_lastChangedHadith', lastChanged);\n      window.localStorage.setItem('hadithData_currentIndex', currentIndex);\n    }\n  }\n\n  storeHadithData(hadithData = []) {\n    window.localStorage.setItem('hadithData', JSON.stringify(hadithData));\n    window.localStorage.setItem('hadithData_lastUpdated', moment().unix());\n  }\n\n  updateData() {\n    var lastHadithUpdateDiff = moment().unix() - this.getLastUpdatedTime();\n    var alreadyHasHadithData = this.getAllHadithData() ? true : false;\n    if (\n      lastHadithUpdateDiff > config.googleSheets.refreshRate * 60 ||\n      !alreadyHasHadithData\n    ) {\n      this.getHadithFromGoogleSheets();\n      console.info('Updating Hadith Data....');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}