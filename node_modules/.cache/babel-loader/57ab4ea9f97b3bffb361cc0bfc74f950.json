{"ast":null,"code":"import _classCallCheck from \"/Users/abdussamad/Documents/Dev/idp-prayer-times/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abdussamad/Documents/Dev/idp-prayer-times/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport moment from 'moment';\nimport config from '../../config.json';\nimport axios from 'axios';\n\nvar AppConfig =\n/*#__PURE__*/\nfunction () {\n  function AppConfig() {\n    _classCallCheck(this, AppConfig);\n\n    this.updateData();\n  }\n\n  _createClass(AppConfig, [{\n    key: \"get\",\n    value: function get() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!key) return null;\n      var data = this.getAppConfig();\n      return data ? data[key] : '';\n    }\n  }, {\n    key: \"getSpeadsheetUrl\",\n    value: function getSpeadsheetUrl() {\n      return process.env.REACT_APP_APP_CONFIG_SPREADSHEET_URL ? process.env.REACT_APP_APP_CONFIG_SPREADSHEET_URL : config.googleSheets.appConfig;\n    }\n  }, {\n    key: \"getAppConfigFromGoogleSheets\",\n    value: function getAppConfigFromGoogleSheets() {\n      var _this = this;\n\n      var spreadsheetUrl = this.getSpeadsheetUrl();\n\n      if (!spreadsheetUrl) {\n        alert('REACT_APP_APP_CONFIG_SPREADSHEET_URL env not set');\n      }\n\n      return axios.get(\"\".concat(spreadsheetUrl, \"&_cacheBust=\").concat(Math.random())).then(function (json) {\n        _this.storeAppConfig(json.data);\n      });\n    }\n  }, {\n    key: \"storeAppConfig\",\n    value: function storeAppConfig() {\n      var _appConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      window.localStorage.setItem('appConfig', JSON.stringify(_appConfig));\n      window.localStorage.setItem('appConfig_lastUpdated', moment().unix());\n    }\n  }, {\n    key: \"getAppConfig\",\n    value: function getAppConfig() {\n      var _appConfig = window.localStorage.getItem('appConfig');\n\n      return _appConfig ? JSON.parse(_appConfig) : null;\n    }\n  }, {\n    key: \"getLastUpdatedTime\",\n    value: function getLastUpdatedTime() {\n      return window.localStorage.getItem('appConfig_lastUpdated');\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var lastUpdatedDiff = moment().unix() - parseInt(this.getLastUpdatedTime());\n\n      if (lastUpdatedDiff > config.googleSheets.refreshRate * 60 || !this.getAppConfig()) {\n        this.getAppConfigFromGoogleSheets();\n        console.info('Updating App Config....');\n      }\n    }\n  }]);\n\n  return AppConfig;\n}();\n\nexport default AppConfig;","map":{"version":3,"sources":["/Users/abdussamad/Documents/Dev/idp-prayer-times/src/_components/app-config/app-config.js"],"names":["moment","config","axios","AppConfig","updateData","key","data","getAppConfig","process","env","REACT_APP_APP_CONFIG_SPREADSHEET_URL","googleSheets","appConfig","spreadsheetUrl","getSpeadsheetUrl","alert","get","Math","random","then","json","storeAppConfig","_appConfig","window","localStorage","setItem","JSON","stringify","unix","getItem","parse","lastUpdatedDiff","parseInt","getLastUpdatedTime","refreshRate","getAppConfigFromGoogleSheets","console","info"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;AACJ,uBAAc;AAAA;;AACZ,SAAKC,UAAL;AACD;;;;0BAEe;AAAA,UAAZC,GAAY,uEAAN,IAAM;AACd,UAAI,CAACA,GAAL,EAAU,OAAO,IAAP;AACV,UAAIC,IAAI,GAAG,KAAKC,YAAL,EAAX;AACA,aAAOD,IAAI,GAAGA,IAAI,CAACD,GAAD,CAAP,GAAe,EAA1B;AACD;;;uCAEkB;AACjB,aAAOG,OAAO,CAACC,GAAR,CAAYC,oCAAZ,GACHF,OAAO,CAACC,GAAR,CAAYC,oCADT,GAEHT,MAAM,CAACU,YAAP,CAAoBC,SAFxB;AAGD;;;mDAE8B;AAAA;;AAC7B,UAAIC,cAAc,GAAG,KAAKC,gBAAL,EAArB;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnBE,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACD;;AAED,aAAOb,KAAK,CACTc,GADI,WACGH,cADH,yBACgCI,IAAI,CAACC,MAAL,EADhC,GAEJC,IAFI,CAEC,UAAAC,IAAI,EAAI;AACZ,QAAA,KAAI,CAACC,cAAL,CAAoBD,IAAI,CAACd,IAAzB;AACD,OAJI,CAAP;AAKD;;;qCAE+B;AAAA,UAAjBgB,UAAiB,uEAAJ,EAAI;;AAC9BC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAzC;AACAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,uBAA5B,EAAqDzB,MAAM,GAAG4B,IAAT,EAArD;AACD;;;mCAEc;AACb,UAAIN,UAAU,GAAGC,MAAM,CAACC,YAAP,CAAoBK,OAApB,CAA4B,WAA5B,CAAjB;;AACA,aAAOP,UAAU,GAAGI,IAAI,CAACI,KAAL,CAAWR,UAAX,CAAH,GAA4B,IAA7C;AACD;;;yCAEoB;AACnB,aAAOC,MAAM,CAACC,YAAP,CAAoBK,OAApB,CAA4B,uBAA5B,CAAP;AACD;;;iCAEY;AACX,UAAIE,eAAe,GAAG/B,MAAM,GAAG4B,IAAT,KAAkBI,QAAQ,CAAC,KAAKC,kBAAL,EAAD,CAAhD;;AACA,UACEF,eAAe,GAAG9B,MAAM,CAACU,YAAP,CAAoBuB,WAApB,GAAkC,EAApD,IACA,CAAC,KAAK3B,YAAL,EAFH,EAGE;AACA,aAAK4B,4BAAL;AACAC,QAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AACD;AACF;;;;;;AAGH,eAAelC,SAAf","sourcesContent":["import moment from 'moment';\nimport config from '../../config.json';\nimport axios from 'axios';\n\nclass AppConfig {\n  constructor() {\n    this.updateData();\n  }\n\n  get(key = null) {\n    if (!key) return null;\n    var data = this.getAppConfig();\n    return data ? data[key] : '';\n  }\n\n  getSpeadsheetUrl() {\n    return process.env.REACT_APP_APP_CONFIG_SPREADSHEET_URL\n      ? process.env.REACT_APP_APP_CONFIG_SPREADSHEET_URL\n      : config.googleSheets.appConfig;\n  }\n\n  getAppConfigFromGoogleSheets() {\n    var spreadsheetUrl = this.getSpeadsheetUrl();\n\n    if (!spreadsheetUrl) {\n      alert('REACT_APP_APP_CONFIG_SPREADSHEET_URL env not set');\n    }\n\n    return axios\n      .get(`${spreadsheetUrl}&_cacheBust=${Math.random()}`)\n      .then(json => {\n        this.storeAppConfig(json.data);\n      });\n  }\n\n  storeAppConfig(_appConfig = []) {\n    window.localStorage.setItem('appConfig', JSON.stringify(_appConfig));\n    window.localStorage.setItem('appConfig_lastUpdated', moment().unix());\n  }\n\n  getAppConfig() {\n    var _appConfig = window.localStorage.getItem('appConfig');\n    return _appConfig ? JSON.parse(_appConfig) : null;\n  }\n\n  getLastUpdatedTime() {\n    return window.localStorage.getItem('appConfig_lastUpdated');\n  }\n\n  updateData() {\n    var lastUpdatedDiff = moment().unix() - parseInt(this.getLastUpdatedTime());\n    if (\n      lastUpdatedDiff > config.googleSheets.refreshRate * 60 ||\n      !this.getAppConfig()\n    ) {\n      this.getAppConfigFromGoogleSheets();\n      console.info('Updating App Config....');\n    }\n  }\n}\n\nexport default AppConfig;\n"]},"metadata":{},"sourceType":"module"}