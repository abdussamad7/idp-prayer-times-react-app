{"ast":null,"code":"import _classCallCheck from \"/Users/abdussamad/Documents/Dev/idp-prayer-times/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/abdussamad/Documents/Dev/idp-prayer-times/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport moment from 'moment';\nimport config from '../../config.json';\nimport axios from 'axios';\n\nvar PrayerData =\n/*#__PURE__*/\nfunction () {\n  function PrayerData() {\n    _classCallCheck(this, PrayerData);\n\n    this.updateData();\n  }\n\n  _createClass(PrayerData, [{\n    key: \"getPrayerTimes\",\n    value: function getPrayerTimes() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      date = date === null ? moment().format('DD/MM/YYYY') : date;\n      var data = this.getPrayerData();\n      return data ? data[date] : [];\n    }\n  }, {\n    key: \"getSpeadsheetUrl\",\n    value: function getSpeadsheetUrl() {\n      return process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL ? process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL : config.googleSheets.prayerData;\n    }\n  }, {\n    key: \"getPrayerTimesFromGoogleSheets\",\n    value: function getPrayerTimesFromGoogleSheets() {\n      var _this = this;\n\n      var spreadsheetUrl = this.getSpeadsheetUrl();\n\n      if (!spreadsheetUrl) {\n        alert('REACT_APP_PRAYER_DATA_SPREADSHEET_URL env not set');\n      }\n\n      return axios.get(\"\".concat(spreadsheetUrl, \"&_cacheBust=\").concat(Math.random())).then(function (json) {\n        _this.storePrayerData(json.data);\n      });\n    }\n  }, {\n    key: \"storePrayerData\",\n    value: function storePrayerData() {\n      var prayerData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      window.localStorage.setItem('prayerData', JSON.stringify(prayerData));\n      window.localStorage.setItem('prayerData_lastUpdated', moment().unix());\n    }\n  }, {\n    key: \"getPrayerData\",\n    value: function getPrayerData() {\n      var _prayerData = window.localStorage.getItem('prayerData');\n\n      return _prayerData ? JSON.parse(_prayerData) : null;\n    }\n  }, {\n    key: \"getLastUpdatedTime\",\n    value: function getLastUpdatedTime() {\n      return window.localStorage.getItem('prayerData_lastUpdated');\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var lastUpdatedDiff = moment().unix() - parseInt(this.getLastUpdatedTime());\n      var alreadyHasPrayerData = this.getPrayerData() ? true : false;\n\n      if (lastUpdatedDiff > config.googleSheets.refreshRate * 60 || !alreadyHasPrayerData) {\n        this.getPrayerTimesFromGoogleSheets().then(function () {\n          if (!alreadyHasPrayerData) {\n            setTimeout(function () {\n              window.location.reload();\n            }, 2000);\n          }\n        });\n        console.info('Updating Prayer Data....');\n      }\n    }\n  }]);\n\n  return PrayerData;\n}();\n\nexport default PrayerData;","map":{"version":3,"sources":["/Users/abdussamad/Documents/Dev/idp-prayer-times/src/_components/prayer-data/prayer-data.js"],"names":["moment","config","axios","PrayerData","updateData","date","format","data","getPrayerData","process","env","REACT_APP_PRAYER_DATA_SPREADSHEET_URL","googleSheets","prayerData","spreadsheetUrl","getSpeadsheetUrl","alert","get","Math","random","then","json","storePrayerData","window","localStorage","setItem","JSON","stringify","unix","_prayerData","getItem","parse","lastUpdatedDiff","parseInt","getLastUpdatedTime","alreadyHasPrayerData","refreshRate","getPrayerTimesFromGoogleSheets","setTimeout","location","reload","console","info"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,U;;;AACJ,wBAAc;AAAA;;AACZ,SAAKC,UAAL;AACD;;;;qCAE2B;AAAA,UAAbC,IAAa,uEAAN,IAAM;AAC1BA,MAAAA,IAAI,GAAGA,IAAI,KAAK,IAAT,GAAgBL,MAAM,GAAGM,MAAT,CAAgB,YAAhB,CAAhB,GAAgDD,IAAvD;AACA,UAAIE,IAAI,GAAG,KAAKC,aAAL,EAAX;AACA,aAAOD,IAAI,GAAGA,IAAI,CAACF,IAAD,CAAP,GAAgB,EAA3B;AACD;;;uCAEkB;AACjB,aAAOI,OAAO,CAACC,GAAR,CAAYC,qCAAZ,GACHF,OAAO,CAACC,GAAR,CAAYC,qCADT,GAEHV,MAAM,CAACW,YAAP,CAAoBC,UAFxB;AAGD;;;qDAEgC;AAAA;;AAC/B,UAAIC,cAAc,GAAG,KAAKC,gBAAL,EAArB;;AAEA,UAAI,CAACD,cAAL,EAAqB;AACnBE,QAAAA,KAAK,CAAC,mDAAD,CAAL;AACD;;AAED,aAAOd,KAAK,CACTe,GADI,WACGH,cADH,yBACgCI,IAAI,CAACC,MAAL,EADhC,GAEJC,IAFI,CAEC,UAAAC,IAAI,EAAI;AACZ,QAAA,KAAI,CAACC,eAAL,CAAqBD,IAAI,CAACd,IAA1B;AACD,OAJI,CAAP;AAKD;;;sCAEgC;AAAA,UAAjBM,UAAiB,uEAAJ,EAAI;AAC/BU,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CC,IAAI,CAACC,SAAL,CAAed,UAAf,CAA1C;AACAU,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,wBAA5B,EAAsDzB,MAAM,GAAG4B,IAAT,EAAtD;AACD;;;oCAEe;AACd,UAAIC,WAAW,GAAGN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,YAA5B,CAAlB;;AACA,aAAOD,WAAW,GAAGH,IAAI,CAACK,KAAL,CAAWF,WAAX,CAAH,GAA6B,IAA/C;AACD;;;yCAEoB;AACnB,aAAON,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,wBAA5B,CAAP;AACD;;;iCAEY;AACX,UAAIE,eAAe,GAAGhC,MAAM,GAAG4B,IAAT,KAAkBK,QAAQ,CAAC,KAAKC,kBAAL,EAAD,CAAhD;AACA,UAAIC,oBAAoB,GAAG,KAAK3B,aAAL,KAAuB,IAAvB,GAA8B,KAAzD;;AACA,UACEwB,eAAe,GAAG/B,MAAM,CAACW,YAAP,CAAoBwB,WAApB,GAAkC,EAApD,IACA,CAACD,oBAFH,EAGE;AACA,aAAKE,8BAAL,GAAsCjB,IAAtC,CAA2C,YAAM;AAC/C,cAAI,CAACe,oBAAL,EAA2B;AACzBG,YAAAA,UAAU,CAAC,YAAW;AACpBf,cAAAA,MAAM,CAACgB,QAAP,CAAgBC,MAAhB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD;AACF,SAND;AAOAC,QAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb;AACD;AACF;;;;;;AAGH,eAAevC,UAAf","sourcesContent":["import moment from 'moment';\nimport config from '../../config.json';\nimport axios from 'axios';\n\nclass PrayerData {\n  constructor() {\n    this.updateData();\n  }\n\n  getPrayerTimes(date = null) {\n    date = date === null ? moment().format('DD/MM/YYYY') : date;\n    var data = this.getPrayerData();\n    return data ? data[date] : [];\n  }\n\n  getSpeadsheetUrl() {\n    return process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL\n      ? process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL\n      : config.googleSheets.prayerData;\n  }\n\n  getPrayerTimesFromGoogleSheets() {\n    var spreadsheetUrl = this.getSpeadsheetUrl();\n\n    if (!spreadsheetUrl) {\n      alert('REACT_APP_PRAYER_DATA_SPREADSHEET_URL env not set');\n    }\n\n    return axios\n      .get(`${spreadsheetUrl}&_cacheBust=${Math.random()}`)\n      .then(json => {\n        this.storePrayerData(json.data);\n      });\n  }\n\n  storePrayerData(prayerData = []) {\n    window.localStorage.setItem('prayerData', JSON.stringify(prayerData));\n    window.localStorage.setItem('prayerData_lastUpdated', moment().unix());\n  }\n\n  getPrayerData() {\n    var _prayerData = window.localStorage.getItem('prayerData');\n    return _prayerData ? JSON.parse(_prayerData) : null;\n  }\n\n  getLastUpdatedTime() {\n    return window.localStorage.getItem('prayerData_lastUpdated');\n  }\n\n  updateData() {\n    var lastUpdatedDiff = moment().unix() - parseInt(this.getLastUpdatedTime());\n    var alreadyHasPrayerData = this.getPrayerData() ? true : false;\n    if (\n      lastUpdatedDiff > config.googleSheets.refreshRate * 60 ||\n      !alreadyHasPrayerData\n    ) {\n      this.getPrayerTimesFromGoogleSheets().then(() => {\n        if (!alreadyHasPrayerData) {\n          setTimeout(function() {\n            window.location.reload();\n          }, 2000);\n        }\n      });\n      console.info('Updating Prayer Data....');\n    }\n  }\n}\n\nexport default PrayerData;\n"]},"metadata":{},"sourceType":"module"}