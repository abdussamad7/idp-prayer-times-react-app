{"ast":null,"code":"import _classCallCheck from\"/Users/abdussamad/Documents/Projects/Mosque-Screens/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abdussamad/Documents/Projects/Mosque-Screens/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import moment from'moment';import config from'../../config.json';import csvtojson from'csvtojson';import request from'request';var PrayerData=/*#__PURE__*/function(){function PrayerData(){_classCallCheck(this,PrayerData);this.updateData();}_createClass(PrayerData,[{key:\"getPrayerTimes\",value:function getPrayerTimes(){var date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;date=date===null?moment().format('DD/MM/YYYY'):date;var data=this.getPrayerData();return data?data[date]:[];}},{key:\"getSpeadsheetUrl\",value:function getSpeadsheetUrl(){return process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL?process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL:config.googleSheets.prayerData;}},{key:\"getPrayerTimesFromGoogleSheets\",value:function getPrayerTimesFromGoogleSheets(){var _this=this;var spreadsheetUrl=this.getSpeadsheetUrl();if(!spreadsheetUrl){alert('CSV not set');}return csvtojson().fromStream(request.get(\"\".concat(spreadsheetUrl,\"&_cacheBust=\").concat(Math.random()))).then(function(json){_this.storePrayerData(json);});}},{key:\"storePrayerData\",value:function storePrayerData(){var prayerData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var formatted_data={};prayerData.forEach(function(day){formatted_data[day.Date]=day;});window.localStorage.setItem('prayerData',JSON.stringify(formatted_data));window.localStorage.setItem('prayerData_lastUpdated',moment().unix());}},{key:\"getPrayerData\",value:function getPrayerData(){var _prayerData=window.localStorage.getItem('prayerData');return _prayerData?JSON.parse(_prayerData):null;}},{key:\"getLastUpdatedTime\",value:function getLastUpdatedTime(){return window.localStorage.getItem('prayerData_lastUpdated');}},{key:\"updateData\",value:function updateData(){var lastUpdatedDiff=moment().unix()-parseInt(this.getLastUpdatedTime());var alreadyHasPrayerData=this.getPrayerData()?true:false;if(lastUpdatedDiff>config.googleSheets.refreshRate*60||!alreadyHasPrayerData){this.getPrayerTimesFromGoogleSheets().then(function(){if(!alreadyHasPrayerData){setTimeout(function(){window.location.reload();},2000);}});console.info('Updating Prayer Data....');}}}]);return PrayerData;}();export default PrayerData;","map":{"version":3,"sources":["/Users/abdussamad/Documents/Projects/Mosque-Screens/src/_components/prayer-data/prayer-data.js"],"names":["moment","config","csvtojson","request","PrayerData","updateData","date","format","data","getPrayerData","process","env","REACT_APP_PRAYER_DATA_SPREADSHEET_URL","googleSheets","prayerData","spreadsheetUrl","getSpeadsheetUrl","alert","fromStream","get","Math","random","then","json","storePrayerData","formatted_data","forEach","day","Date","window","localStorage","setItem","JSON","stringify","unix","_prayerData","getItem","parse","lastUpdatedDiff","parseInt","getLastUpdatedTime","alreadyHasPrayerData","refreshRate","getPrayerTimesFromGoogleSheets","setTimeout","location","reload","console","info"],"mappings":"kVAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,C,GAEMC,CAAAA,U,yBACJ,qBAAc,kCACZ,KAAKC,UAAL,GACD,C,8EAE2B,IAAbC,CAAAA,IAAa,2DAAN,IAAM,CAC1BA,IAAI,CAAGA,IAAI,GAAK,IAAT,CAAgBN,MAAM,GAAGO,MAAT,CAAgB,YAAhB,CAAhB,CAAgDD,IAAvD,CACA,GAAIE,CAAAA,IAAI,CAAG,KAAKC,aAAL,EAAX,CACA,MAAOD,CAAAA,IAAI,CAAGA,IAAI,CAACF,IAAD,CAAP,CAAgB,EAA3B,CACD,C,2DAEkB,CACjB,MAAOI,CAAAA,OAAO,CAACC,GAAR,CAAYC,qCAAZ,CACHF,OAAO,CAACC,GAAR,CAAYC,qCADT,CAEHX,MAAM,CAACY,YAAP,CAAoBC,UAFxB,CAGD,C,uFAEgC,gBAC/B,GAAIC,CAAAA,cAAc,CAAG,KAAKC,gBAAL,EAArB,CAEA,GAAI,CAACD,cAAL,CAAqB,CACnBE,KAAK,CAAC,aAAD,CAAL,CACD,CAED,MAAOf,CAAAA,SAAS,GACbgB,UADI,CACOf,OAAO,CAACgB,GAAR,WAAeJ,cAAf,wBAA4CK,IAAI,CAACC,MAAL,EAA5C,EADP,EAEJC,IAFI,CAEC,SAAAC,IAAI,CAAI,CACZ,KAAI,CAACC,eAAL,CAAqBD,IAArB,EACD,CAJI,CAAP,CAKD,C,yDAEgC,IAAjBT,CAAAA,UAAiB,2DAAJ,EAAI,CAC/B,GAAIW,CAAAA,cAAc,CAAG,EAArB,CACAX,UAAU,CAACY,OAAX,CAAmB,SAAAC,GAAG,CAAI,CACxBF,cAAc,CAACE,GAAG,CAACC,IAAL,CAAd,CAA2BD,GAA3B,CACD,CAFD,EAGAE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAA0CC,IAAI,CAACC,SAAL,CAAeR,cAAf,CAA1C,EACAI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,wBAA5B,CAAsD/B,MAAM,GAAGkC,IAAT,EAAtD,EACD,C,qDAEe,CACd,GAAIC,CAAAA,WAAW,CAAGN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,YAA5B,CAAlB,CACA,MAAOD,CAAAA,WAAW,CAAGH,IAAI,CAACK,KAAL,CAAWF,WAAX,CAAH,CAA6B,IAA/C,CACD,C,+DAEoB,CACnB,MAAON,CAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,wBAA5B,CAAP,CACD,C,+CAEY,CACX,GAAIE,CAAAA,eAAe,CAAGtC,MAAM,GAAGkC,IAAT,GAAkBK,QAAQ,CAAC,KAAKC,kBAAL,EAAD,CAAhD,CACA,GAAIC,CAAAA,oBAAoB,CAAG,KAAKhC,aAAL,GAAuB,IAAvB,CAA8B,KAAzD,CACA,GACE6B,eAAe,CAAGrC,MAAM,CAACY,YAAP,CAAoB6B,WAApB,CAAkC,EAApD,EACA,CAACD,oBAFH,CAGE,CACA,KAAKE,8BAAL,GAAsCrB,IAAtC,CAA2C,UAAM,CAC/C,GAAI,CAACmB,oBAAL,CAA2B,CACzBG,UAAU,CAAC,UAAW,CACpBf,MAAM,CAACgB,QAAP,CAAgBC,MAAhB,GACD,CAFS,CAEP,IAFO,CAAV,CAGD,CACF,CAND,EAOAC,OAAO,CAACC,IAAR,CAAa,0BAAb,EACD,CACF,C,0BAGH,cAAe5C,CAAAA,UAAf","sourcesContent":["import moment from 'moment';\nimport config from '../../config.json';\nimport csvtojson from 'csvtojson';\nimport request from 'request';\n\nclass PrayerData {\n  constructor() {\n    this.updateData();\n  }\n\n  getPrayerTimes(date = null) {\n    date = date === null ? moment().format('DD/MM/YYYY') : date;\n    var data = this.getPrayerData();\n    return data ? data[date] : [];\n  }\n\n  getSpeadsheetUrl() {\n    return process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL\n      ? process.env.REACT_APP_PRAYER_DATA_SPREADSHEET_URL\n      : config.googleSheets.prayerData;\n  }\n\n  getPrayerTimesFromGoogleSheets() {\n    var spreadsheetUrl = this.getSpeadsheetUrl();\n\n    if (!spreadsheetUrl) {\n      alert('CSV not set');\n    }\n\n    return csvtojson()\n      .fromStream(request.get(`${spreadsheetUrl}&_cacheBust=${Math.random()}`))\n      .then(json => {\n        this.storePrayerData(json);\n      });\n  }\n\n  storePrayerData(prayerData = []) {\n    var formatted_data = {};\n    prayerData.forEach(day => {\n      formatted_data[day.Date] = day;\n    });\n    window.localStorage.setItem('prayerData', JSON.stringify(formatted_data));\n    window.localStorage.setItem('prayerData_lastUpdated', moment().unix());\n  }\n\n  getPrayerData() {\n    var _prayerData = window.localStorage.getItem('prayerData');\n    return _prayerData ? JSON.parse(_prayerData) : null;\n  }\n\n  getLastUpdatedTime() {\n    return window.localStorage.getItem('prayerData_lastUpdated');\n  }\n\n  updateData() {\n    var lastUpdatedDiff = moment().unix() - parseInt(this.getLastUpdatedTime());\n    var alreadyHasPrayerData = this.getPrayerData() ? true : false;\n    if (\n      lastUpdatedDiff > config.googleSheets.refreshRate * 60 ||\n      !alreadyHasPrayerData\n    ) {\n      this.getPrayerTimesFromGoogleSheets().then(() => {\n        if (!alreadyHasPrayerData) {\n          setTimeout(function() {\n            window.location.reload();\n          }, 2000);\n        }\n      });\n      console.info('Updating Prayer Data....');\n    }\n  }\n}\n\nexport default PrayerData;\n"]},"metadata":{},"sourceType":"module"}